server:
  port: ${PORT:${SERVER_PORT:0}}

#configuramos la ubicacion y acceso a la base de datos
spring:
  datasource:
    url: jdbc:mysql://localhost:3307/bd_service_user
    username: root
    password: 
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#configurar JPA
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update

#configuramos el cliente de Eureka
eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    #hostname: localhost

#configuracion de resilience4j
resilience4j:
  circuitbreaker:
    instances:
      carsCB:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 4
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      bikesCB:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 4
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      allCB:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 4
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    configs:
      default:
        wait-duration-in-open-state: 10s
  timelimiter:
    configs:
      default:
        timeout-duration: 10s